#!/bin/bash

cd ~/df_linux || exit 1

DFHACK=""
STONESENSE=""

usage() {
	cat <<EOF
Usage: $0 [OPTION...]

Application data can be found in ~/.var/app/com.bay12games.DwarfFortress/df_linux/

If a dfhack init file has been created, then the default is to run dfhack.

Options:
 -d   Runs plain Dwarf Fortress
 -h   Runs dfhack, creating an init file if one doesn't already exist
 -s   Copies over files needed to run Stonesense
 -R   Copies raw files into the application data folder, for editing
EOF
}

while getopts ":hsdR" opt; do
	case $opt in
		h)
			DFHACK="true"
			;;
		s)
			STONESENSE="true"
			;;
		d)
			DFHACK="false"
			;;
		R)
			RAW="true"
			;;
		\?)
			echo "Unknown option -$OPTARG"
			usage
			exit 0
			;;
	esac
	shift
done

if [ ! -d /app/dwarf-fortress/hack ]; then
	[ "$DFHACK" = "true" ] && ( echo "This version of com.bay12games.DwarfFortress does not have dfhack support. Sorry."; exit 1; )
	DFHACK="false"
fi

APP=/app/dwarf-fortress
DIRS=( data )
FILES=( '*.txt' README.linux )

if [ -f dfhack.init ] && [ "$DFHACK" != "false" ]; then
	DFHACK="true"
fi

[ "$DFHACK" = "true" ] && DIRS+=( hack dfhack-config )
#[ "$STONESENSE" = "true" ] && DIRS+=( stonesense )
[ "$RAW" = "true" ] && DIRS+=( raw )

for DIR in "${DIRS[@]}"; do
	cp -nr "$APP/$DIR" .
done
for PATTERN in "${FILES[@]}"; do
	for FILE in $APP/$PATTERN; do
		[ -f "$FILE" ] && cp -n "$FILE" .
	done
done

if [ "$DFHACK" = "true" ] && [ ! -f dfhack.init ]; then
	echo "Creating dfhack.init"
	cp $APP/dfhack.init-example dfhack.init
fi

if [ "$DFHACK" = "true" ] || [ -f dfhack.init ] && [ "$DFHACK" != "false" ]; then
	RC='.dfhackrc'
	if [ -r "$HOME/$RC" ]; then
    	. "$HOME/$RC"
	fi

	export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$APP/hack/libs:$APP/hack"
	export LD_PRELOAD="${PRELOAD_LIB:+$APP/$PRELOAD_LIB:}$APP/hack/libdfhack.so"
fi

$APP/libs/Dwarf_Fortress "$@"
